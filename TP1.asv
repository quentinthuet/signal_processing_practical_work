%%%% 5.2 Génération et tracé d'un cosinus numérique %%%%

% 1.
A  = 1;     % Amplitude du cosinus généré
f0 = 1100;  % Fréquence du cosinus numérique
Fe = 10000; % Fréquence d'échantillonnage
N  = 90;    % Nombre d'échantillons

%       Génération du cosinus
t = linspace(0,(N-1)/Fe,N);
x = A*cos(2*pi*f0*t);

% 2.
% Figure 1 %
figure(1);
plot(t,x);
title('Cos de fréq 1100Hz et d''ampl 1 V échantil 90 fois à la fréq 10000Hz')
xlabel('temps (s)')
ylabel('amplitude (V)')

% 3.
%       Génération du cosinus à la nouvelle fréquence d'échantillonnage
Fe_prime = 1000;
t_prime = linspace(0,(N-1)/Fe_prime,N);
x_prime = A*cos(2*pi*f0*t_prime);

% 4.
% Figure 2 %
figure(2);
plot(t_prime,x_prime);
title('Cos de fréq 1100Hz et d''ampl 1 V échant 90 fois à la fréq 1000Hz')
xlabel('temps (s)')
ylabel('amplitude (V)')

%%%% 5.3 Génération et tracé de la TFD d'un cosinus numérique %%%%

% 2.
%   (a)
%       Calcul et affichage de la TFD du cosinus échantillonné à 10 000 Hz
X = fftshift(fft(x));
Xabs = abs(X);

f = linspace(-Fe/2,Fe/2,N);

% Figure 3 %
figure(3);
semilogy(f,Xabs);
title('TFD du cos de la Figure 1')
xlabel('fréquence (Hz)')
ylabel('amplitude (V)')

%   (b)
%       Calcul et affichage de la TFD du cosinus échantillonné à 1 000 Hz

X_prime = fftshift(fft(x_prime));
Xabs_prime = abs(X_prime);

f_prime = linspace(-Fe_prime/2,Fe_prime/2,N);

% Figure 4 %
figure(4);
semilogy(f_prime,Xabs_prime);
title('TFD du cos de la Figure 2')
xlabel('fréquence (Hz)')
ylabel('amplitude (V)')

% 4.
%       Calcul du signal avec Zero Padding et affichage et calcul de sa TFD

M  = 10;              
Np = 2^nextpow2(M*N);

%       Calcul du signal avec Zero Padding et affichage et calcul de sa TFD
y = zeros(1,Np);
y(1,1:length(x)) = x;

Y = fftshift(fft(y,Np));
Yabs = abs(Y);

f = linspace(-Fe/2,Fe/2,Np);

% Figure 5 %
figure(5);
plot(f,Yabs);
title('TFD du cos de la figure 1 après Zero Padding')
xlabel('fréquence (Hz)')
ylabel('amplitude (V)')
lg = legend('$N_{p} = 1024$', ...
	'Location','Best');
set(lg,'Interpreter','Latex');

% 5.

M1 = 1;
M2 = 2;
M3 = 10;

Np1 = 2^nextpow2(M1*N);
Np2 = 2^nextpow2(M2*N);
Np3 = 2^nextpow2(M3*N);

y1 = zeros(1,M1*N);
y2 = zeros(1,M2*N);
y3 = zeros(1,M3*N);

y1(1,1:length(x)) = x;
y2(1,1:length(x)) = x;
y3(1,1:length(x)) = x;

Y1 = fftshift(fft(y,Np1));
Y2 = fftshift(fft(y,Np2));
Y3 = fftshift(fft(y,Np3));

Yabs1 = abs(Y1);
Yabs2 = abs(Y2);
Yabs3 = abs(Y3);

f1 = linspace(-Fe/2,Fe/2,Np1);
f2 = linspace(-Fe/2,Fe/2,Np2);
f3 = linspace(-Fe/2,Fe/2,Np3);

% Figure 6 %
figure(6);
semilogy(f1,Yabs1,f2,Yabs2,f3,Yabs3);
title('TFD du cos de la figure 1 après Zero Padding')
xlabel('fréquence (Hz)')
ylabel('amplitude (V)')
lg = legend('$N_{p} = 128$', ...
	'$N_{p} = 256$', ...
	'$N_{p} = 1024$', ...
	'Location','Best');
set(lg,'Interpreter','Latex');

t = linspace(0,(N-1)/Fe,N);
x = ifft(Y3);

%%%% 5.4 Estimation et tracé de la DSP d'un cosinus numérique %%%%

% 1.

k = linspace(0,(N-1),N);
x = A*cos(2*pi*f0*k/Fe+rand*2*pi);

% 2.

S_x = 1/N*abs(fft(x)).^2;
f = linspace(0,Fe,N);

% Figure 7 %
figure(7);
plot(f,S_x);
title('Estimation par périodogramme de la DSP du cos numérique aléatoire généré')
xlabel('fréquence (Hz)')
ylabel('amplitude (V)')

% 3.

S_x_hamming = 1/N*abs(fft(x.*hamming(length(x))')).^2;
S_x_blackman = 1/N*abs(fft(x.*blackman(length(x))')).^2;

% Figure 8 %
figure(8);
plot(f,S_x_hamming,f,S_x_blackman);
title('Estimation par périodogramme fenêtré')
xlabel('fréquence (Hz)')
ylabel('amplitude (V)')
lg = legend('Fenetre de Hamming', ...
	'Fenetre de Blackman', ...
	'Location','Best');
set(lg,'Interpreter','Latex');

% 4.

S_x_welch = pwelch(x,'','','','twosided')';

f_welch = linspace(0,Fe,length(S_x_welch));

% Figure 9 %
figure(9);
plot(f_welch,S_x_welch);
title('Estimation par périodogramme de Welch')
xlabel('fréquence (Hz)')
ylabel('amplitude (V)')

% 5.

% Figure 10 %
figure(10);
plot(f,S_x,f,S_x_hamming,f,S_x_blackman,f_welch,S_x_welch);
title('Estimation par périodogramme')
xlabel('fréquence (Hz)')
ylabel('amplitude (V)')
lg = legend('Classique', ...
	'Hamming', ...
	'Blackman', ...
	'Welch', ...
	'Location','Best');
set(lg,'Interpreter','Latex');





